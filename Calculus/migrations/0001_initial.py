# Generated by Django 3.2.18 on 2023-07-09 18:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Task1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power', models.PositiveSmallIntegerField()),
                ('scheme', models.PositiveSmallIntegerField(choices=[(0, 'в ряд'), (1, 'по контуру')])),
                ('soil', models.PositiveSmallIntegerField(choices=[(1, 'чернозем'), (2, 'супесок'), (3, 'песок'), (4, 'суглинок'), (5, 'глина')])),
                ('climate_zone', models.PositiveSmallIntegerField(choices=[(1, 'первой'), (2, 'второй'), (3, 'третьей'), (4, 'четвертой')])),
            ],
        ),
        migrations.CreateModel(
            name='Task2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme', models.PositiveSmallIntegerField(choices=[(1, 'Y/Yн'), (2, 'Δ/Yн')])),
                ('length', models.IntegerField()),
                ('power', models.PositiveSmallIntegerField(choices=[(1, 40), (2, 63), (3, 400), (4, 630)])),
                ('phase_voltage', models.IntegerField()),
                ('phase_square', models.IntegerField()),
                ('phase_material', models.PositiveSmallIntegerField(choices=[(1, 'алюминий'), (2, 'медь')])),
                ('distance_between_conductors', models.FloatField()),
                ('amperage_nominal', models.IntegerField()),
                ('type_electro', models.PositiveSmallIntegerField(choices=[(1, 'AB'), (2, 'П')])),
            ],
        ),
        migrations.CreateModel(
            name='ResultTask2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('square', models.FloatField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Calculus.task2')),
            ],
        ),
        migrations.CreateModel(
            name='ResultTask1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.FloatField()),
                ('vertical_length', models.FloatField()),
                ('num_accurate', models.FloatField()),
                ('scheme', models.CharField(max_length=32)),
                ('distance_between', models.FloatField()),
                ('section', models.FloatField()),
                ('length', models.FloatField()),
                ('depth', models.FloatField()),
                ('total_resistance', models.FloatField()),
                ('normative_resistance', models.FloatField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Calculus.task1')),
            ],
        ),
    ]
